$browser-context: 16; // Default

// Return rem size value for any pixel value passed.
@function rem($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return #{$pixels / $context}rem;
}

@mixin dynamic-size($properties, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media screen and (min-width: $screen-mobile) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$screen-mobile}) / #{strip-unit($screen-desktop - $screen-mobile)});
    }
  }

  @media screen and (min-width: $screen-desktop) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
